"Yes, very prohibitive. A common thing I was doing over 8 years ago was SHA1(MD5(""username"")+""password"")), in fact. The problem with this method is that later one we wanted the users to be able to change their username, so instead we started doing something like this: SHA256(MD5(""timestamp of account creation"")+SHA-1(""password"")+CustomSieve(""password""+""password"")) CustomSieve was a script that used every even character's ASCII binary representation to modify the string itself. Like my own hashing function that was not good enough for professional use, but unique enough that it drastically changed the final SHA-256 hash. Most people would probably say this was overkill, but I didn't want to just be sending two hex hashes into a SHA256 in case some day someone created a rainbow table specifically designed to crack hashes of hashes. The timestamp of account creation was stored with the username in it's own table and accessing that table was logged differently and audited separately, so a hacker would have to be doing some really weird things in order to get that info."