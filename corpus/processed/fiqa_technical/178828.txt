">For example, typically in IT management loves the idea of RAD, but what it often means is that they want to start before they understand the scope of the problem, let alone the requirements. Let alone the most efficient & effective solution. >It tends to be the big projects that end up being screwed up. Smaller stuff is easier, but it takes a lot of skills to manage the production of large and complex systems or pieces of engineering. Spot on. I've seen so many companies piss away countless dollars and years of ""work"" (sometimes in the *million$* and more) in ""big project"" attempt #1 .. then, again, in ""BIGGER better"" attempt #2 .. until they finally realize that there will be no ""silver bullet"", and so attempt #3 finally figures out what REALLY needed to be done and moves ahead to do it. (Of course that is in the companies that managed to survive attempts #1 & #2, and didn't completely FUBAR everything in the process.)"