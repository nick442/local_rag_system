It can be helpful, but also knowing what has been tried before is vital. What works and what does not work. Many ideas are not so new. For example, typically in IT management loves the idea of RAD, but what it often means is that they want to start before they understand the scope of the problem, let alone the requirements. It tends to be the big projects that end up being screwed up. Smaller stuff is easier, but it takes a lot of skills to manage the production of large and complex systems or pieces of engineering. Sure, change is important but so is the knowledge of what works and what does not work. Every so often, something comes along and sets it on its head so some of that old knowledge can be discounted, but not often.