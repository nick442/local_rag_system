"Thanks, that's what I've been thinking. 9 years C++, but haven't used it much the past two years. 5 years solid python and matlab, and a few individual projects with others (Fortran 77/90, Mathematica), plus tutorials on ruby and perl just to be familiar. I started using SKLearn ML stuff in recent publications, and that's been nice. The group I've been most active with is the detector characterization group in my collaboration--we have a few hundred thousand channels, and are the liaisons between pure data analysis guys and the instrumentalists. Lots of data quality investigations, and implementing changes to both the data analysis pipelines (improving final results, cleaning data, vetos, etc) as well as the detector operations (adjusting controls signals and detector automation tools, etc). That being said, my ""program from scratch"" ability is average for my peers, involving daily stack exchange searches, and with supporting so many projects for a 1000+ person collaboration I feel like I'm going to look inexperienced in interviews (""yeah I could look that up."" ""Yeah I could sit down and figure out a good way to investigate/tackle that issue."" ""Yeah I don't have a CS degree, so I probably wouldn't pass a random upper-level undergrad CS exam.."") But I measure twice and cut once, I am a deep critical thinker and learn quickly. I feel like it's cliche to say that, but it's valid.. so I'm pretty nervous about making this jump. Not really sure where to start! Thanks for your reply :)"