"It holds your hand and spoon feeds you answers. And they're oftentimes not even good answers. Worse yet, if you try to solve the problem in another fashion than what's been designed for you, you'll get cryptic error messages that borderline on buggy. I'm no expert, but I'm a completely self taught software engineer who does this stuff 40+ hours a week in a professional capacity. I personally prefer the ""write a function that passes the unit tests"" approach, as it's considered a best practice nearly everywhere you go."